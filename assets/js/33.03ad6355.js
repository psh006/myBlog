(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{826:function(t,a,s){"use strict";s.r(a);var e=s(114),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http与https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http与https"}},[t._v("#")]),t._v(" http与https")]),t._v(" "),s("h2",{attrs:{id:"http和https-简单描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http和https-简单描述"}},[t._v("#")]),t._v(" http和https 简单描述")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http与https是超文本传输协议，是目前主流的web传输协议。\n目前http协议已经发展到2.0阶段，支持长链接，断点续传，cache 缓存策略，多路复用，服务器推送等。\nhttps相对于http更安全，增加了证书SSL加密，端口是433。\n")])])]),s("h2",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP(HyperText Transfer Protocol，超文本传输协议)\n目前http协议已经发展到2.0阶段，支持长链接，断点续传，cache 缓存策略，多路复用，服务器推送等\n它是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。\n不仅保证计算机正确快速地传输超文本文档，还确定传输文档中的哪一部分，以及哪部分内容首先显示(如文本先于图形)等\n默认端口号：80\n")])])]),s("h3",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.支持客户端/服务端模式（C/S)\n2.简单快速\n3.灵活\n4.无连接\n5.无状态\n6.多次HTTP请求\n7.基于TCP协议\n")])])]),s("h3",{attrs:{id:"工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP由请求和响应构成，是一个标准的客户端/服务器模型（C/S）。\nHTTP协议永远都是客户端发起请求，服务器回送响应。\n客户机与服务器建立连接后，发送一个请求给服务器，服务器接收到请求后，\n给予相应的响应信息，随后便关闭tcp连接。服务器可能同时接收多个请求，\n这是就会产生多个session，每个session分别处理各自的请求\n")])])]),s("h3",{attrs:{id:"工作过程-一次http操作称为事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作过程-一次http操作称为事务"}},[t._v("#")]),t._v(" 工作过程（一次HTTP操作称为事务）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.地址解析\n2.封装HTTP请求数据包\n3.封装成TCP包，建立TCP连接\n4.客户机发送请求命令\n5.服务器响应\n6.服务器关闭TCP连接\n7.客户端浏览器解析HTML内容\n")])])]),s("h3",{attrs:{id:"常用的http状态码及其描述文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的http状态码及其描述文本"}},[t._v("#")]),t._v(" 常用的HTTP状态码及其描述文本")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.200 OK:请求成功，并返回数据\n2.400：表示客户端请求有语法错误，不能被服务器所理解\n3.401: 请求未经授权\n4.403：服务器收到请求，但是拒绝提供服务\n5.404：请求的资源不存在\n6.500： 服务器内部错误\n7.503：服务器当前不能够处理客户端的请求，在一段时间后，服务器可能会恢复正常\n")])])]),s("h3",{attrs:{id:"http常用请求方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http常用请求方法"}},[t._v("#")]),t._v(" HTTP常用请求方法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.get:请求指定的页面信息，并返回实体主体\n2.post：向指定资源提交数据进行处理请求，例如，提交表单或者上传文件\n3.head:类似get请求，返回的响应中没有具体内容，用于获取报头\n4.put：从客户端向服务器传送的数据取代指定的文档内容\n5.delect:请求服务器删除指定的页面\n6.options:允许客户查看服务器的性能\n")])])]),s("h2",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),s("h3",{attrs:{id:"简介-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTPS（Hypertext Transfer Protocol over Secure Socket Layer，超文本传输安全协议），\n是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL。\n默认端口为443；\n")])])]),s("h2",{attrs:{id:"两种基本的机密算法类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两种基本的机密算法类型"}},[t._v("#")]),t._v(" 两种基本的机密算法类型")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.对称加密：密钥只有一个，加密解密为同一个密码\n优点:处理速度快，缺点:容易被第三方盗取\n2.非对称加密 ：使用两个密钥，公共密钥和私有密钥\n优点:更加安全，不容易被盗取，缺点:处理效率相比对称密钥加密要慢，如果在通信时用这种方式加密，效率很低\n")])])]),s("h2",{attrs:{id:"http与https的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http与https的区别"}},[t._v("#")]),t._v(" HTTP与HTTPS的区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.HTTP的URL以http://开头，而HTTPS 的URL以https:// 开头\n2.HTTP是不安全的，而HTTPS是安全的\n3.HTTP标准端口是80 ，而HTTPS的标准端口是443\n4.在OSI网络模型中，HTTP工作于应用层，而 HTTPS 的安全传输机制工作在传输层\n5.HTTP无法加密，而HTTPS对传输的数据进行加密\n6.HTTP无需证书，而HTTPS需要CA机构wosign的颁发的SSL证书\n")])])]),s("h2",{attrs:{id:"无状态协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无状态协议"}},[t._v("#")]),t._v(" 无状态协议")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息。\n也就是说，当客户端一次HTTP请求完成以后，客户端再发送一次HTTP请求，HTTP并不知道当前客户端是一个”老用户“\n")])])]),s("h2",{attrs:{id:"解决http协议无状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决http协议无状态"}},[t._v("#")]),t._v(" 解决Http协议无状态")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("解决方案：Cookie和Session都可以用于保持 HTTP 连接状态\n")])])]),s("h2",{attrs:{id:"http协议的三大缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http协议的三大缺点"}},[t._v("#")]),t._v(" HTTP协议的三大缺点")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.被窃听的风险\n2.被篡改的危险\n3.被冒充的风险\n")])])]),s("h3",{attrs:{id:"https解决http协议的三大缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https解决http协议的三大缺点"}},[t._v("#")]),t._v(" HTTPS解决HTTP协议的三大缺点")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("防监听：采用对称加密对数据进行加密，采用非对称加密对对称加密的密钥进行加密\n防伪装：通信双方携带证书，证书有第三方颁发，很难伪造\n防篡改：采用摘要算法（MD5或是SHA-1）\n")])])]),s("h2",{attrs:{id:"浏览器页面渲染的流程-输入url后页面发生什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器页面渲染的流程-输入url后页面发生什么"}},[t._v("#")]),t._v(" 浏览器页面渲染的流程 (输入url后页面发生什么)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("首先dns解析IP，建立tcp链接下载资源，构建dom树，\n当遇到link标签，会下载并执行解析css（不会阻止dom树的构建）\n当遇到script标签的是，dom树构建会暂停，下载并执行完js才会继续（defer（下载延迟执行），async（异步下载并执行）） \n然后再布局和绘制（layout,paint）最后在 render \n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);